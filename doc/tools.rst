Tools and libraries
===================

This page describes the tools and libraries that are used.

All the development tools we use are free and open source programs. Some of
them have to be downloaded and installed by the developer, some of them are
included in the Heapkeeper repository.

Quick setup
-----------

A quick setup for Heapkeeper development follows. This works in Ubuntu Linux,
but may apply for other systems with modifications. Only the commands are
spelled out, not their output.

First install :ref:`Python <development_python>`, :ref:`virtualenv` and
:ref:`git <gitref>` and check their versions::

    $ sudo apt-get install python python-dev python-setuptools
    $ sudo apt-get install git-core
    $ sudo easy_install virtualenv
    $ git --version
    git version 1.7.0.4 # should be at least 1.5.3
    $ python --version
    Python 2.6.6 # should be at least 2.6

Create a directory that will contain everything related to Heapkeeper's
development::

    $ mkdir heapkeeper-dev
    $ cd heapkeeper-dev

Set up :ref:`virtualenv`::

    $ virtualenv python
    $ echo '#!/bin/sh' >> start-development
    $ echo "export PATH=`pwd`/python/bin:\$PATH" >> start-development
    $ chmod +x start-development
    $ . start-development

This ``start-development`` script should be always executed before starting
Heapkeeper development, because it will set the environment variables so that
the virtual Python environment will be used. Check the output of ``which
python``::

    $ which python
    [...]/heapkeeper-dev/python/bin/python

Install :ref:`Sphinx <development_sphinx>`, :ref:`pylint`, :ref:`coverage.py
<coveragepy>`::

    $ easy_install 'sphinx==0.6.5'
    $ easy_install 'pylint==0.21'
    $ easy_install coverage

Clone the repositories of Heapkeeper, the :ref:`Heapkeeper Development
Utilities <hk-dev-utils>` and :ref:`margitka` (the last one is optional)::

    $ git clone git://github.com/hcs42/heapkeeper.git
    $ git clone git://github.com/hcs42/hk-dev-utils.git
    $ git clone git://github.com/attish/margitka.git

Check that your Java is at least 1.6 and download :ref:`JsTestDriver
<jstestdriver>`::

    $ java -version
    java version "1.6.0_20"
    OpenJDK Runtime Environment (IcedTea6 1.9.2) (6b20-1.9.2-0ubuntu2)
    OpenJDK 64-Bit Server VM (build 19.0-b09, mixed mode)
    $ wget http://js-test-driver.googlecode.com/files/JsTestDriver-1.2.2.jar \
           -O heapkeeper/external/JsTestDriver.jar

Read the SETUP section in ``hk-dev-utils/README`` and perform the steps
described.

Update the :ref:`web.py <webpy>` submodule::

    $ cd heapkeeper
    $ git submodule init
    $ git submodule update

Used tools
----------

.. highlight:: sh

All the development tools we use are free and open source programs.

The following programs should be installed on a developer's computer: Python_,
Git_ and Sphinx_.

.. _development_python:

Python
^^^^^^

Python_ is the interpreter that executes Heapkeeper. Heapkeeper needs Python
2.6 or 2.7.

.. _`Python`: http://www.python.org/

.. _virtualenv:

virtualenv
^^^^^^^^^^

virtualenv__ is used for creating a virtual Python environment that contains
the appropriate versions of the tools and libraries used by Heapkeeper.

__ http://pypi.python.org/pypi/virtualenv

.. _gitref:

Git
^^^

Git_ is version control system that we use to manage the source code and
documentation of Heapkeeper. These are stored in the `Heapkeeper repository`_,
which is hosted by GitHub_. We use Git 1.6, but previous versions are probably
fine.

Installation procedure for Debian and Ubuntu Linux users::

    $ sudo apt-get install git-core

Using Git to download Heapkeeper::

    $ git clone git://github.com/hcs42/heapkeeper.git

.. _`Git`: http://git-scm.com/
.. _`GitHub`: http://github.com/
.. _`Heapkeeper repository`: http://github.com/hcs42/heapkeeper/

.. _development_sphinx:

Sphinx
^^^^^^

The Heapkeeper documentation is written in reStructuredText_ format and is
generated by the Sphinx_ program. We currently use Sphinx 0.6.5.

Installation procedure for Unix users::

    $ sudo easy_install 'sphinx==0.6.5'

Compiling the Heapkeeper documentation::

    $ cd <Heapkeeper directory>
    $ cd doc
    $ make html

The format defined by reStructuredText_ and Sphinx_ is not trivial. Two pages
that are worth to have a look at:

* `Sphinx documentation`_
* `reStructuredText Quick Reference`_

.. _`reStructuredText`: http://docutils.sourceforge.net/rst.html
.. _`Sphinx`: http://sphinx.pocoo.org/
.. _`easy_install`: http://peak.telecommunity.com/DevCenter/EasyInstall
.. _`Mercurial`: http://mercurial.selenic.com/
.. _`Sphinx repository`: http://bitbucket.org/birkenfeld/sphinx/
.. _`Sphinx documentation`: http://sphinx.pocoo.org/contents.html
.. _`reStructuredText Quick Reference`:
   http://docutils.sourceforge.net/docs/user/rst/quickref.html

.. _pylint:

pylint
^^^^^^

pylint__ is a static analyzer tool that can find bugs and warn when we break
coding conventions. We wrote a wrapper around pylint in :ref:`hk-dev-utils`,
because there are some warnings we don't care about (or at least not now).

Installation procedure for Unix users::

    $ sudo easy_install 'pylint==0.21'

It is recommended to use the ``hk_pylint`` wrapper (part of
:ref:`hk-dev-utils`) to execute pylint on Heapkeeper::

    $ cd <Heapkeeper directory>
    $ hk-dev-utils/hk_pylint

__ http://www.logilab.org/857

.. _coveragepy:

coverage.py
^^^^^^^^^^^

`coverage.py`__ is a tool for measuring code coverage of automatic tests
for Python programs.

Installation procedure on Debian and Ubuntu Linux::

    $ sudo apt-get install python-dev python-setuptools
    $ sudo easy_install coverage

Measuring the code coverage of Heapkeeper's automatic tests
(``hkdu-list-sources`` is part of :ref:`hk-dev-utils`)::

    $ cd <Heapkeeper directory>
    $ coverage erase
    $ coverage run src/test.py
    ----------------------------------------------------------------------
    Ran 96 tests in 0.221s

    OK
    $ coverage report $(hkdu-list-sources | grep -E '^(src|plugin).*py$' | grep -v test)
    Name                                                    Stmts   Exec  Cover
    ---------------------------------------------------------------------------
    plugins/chat/src/hkp_chat                                  67      0     0%
    plugins/custom_heap_server/src/hkp_custom_heap_server      30      0     0%
    plugins/issue_tracker/src/hkp_issue_tracker               250     94    37%
    plugins/review/src/hkp_review                              55      0     0%
    plugins/users/src/hkp_users                                22      0     0%
    src/hk                                                     10      0     0%
    src/hkbodyparser                                          199    198    99%
    src/hkconfig                                               36     34    94%
    src/hkcustomlib                                            65     36    55%
    src/hkemail                                               193     20    10%
    src/hkgen                                                 433    334    77%
    src/hklib                                                 913    862    94%
    src/hksearch                                               50     49    98%
    src/hkshell                                               563    393    69%
    src/hkutils                                               212    173    81%
    src/hkweb                                                 443    153    34%
    ---------------------------------------------------------------------------
    TOTAL                                                    3541   2346    66%

Displaying the covered code in HTML (the module names in the index.html are
links to the detailed results)::

    $ coverage html -d coverage-html $(hkdu-list-sources | grep -E '^(src|plugin).*py$' | grep -v test)
    $ <your browser of choice> coverage-html/index.html

__ http://nedbatchelder.com/code/coverage/

.. _jstestdriver:

JsTestDriver
^^^^^^^^^^^^

`JsTestDriver`__ is a unit testing tool for JavaScript, written in Java.

It can be installed and used in the following way:

#. Make sure you have at least Java 1.6::

       $ java -version

#. Download JsTestDriver into the ``"external"`` directory from here__::

       $ wget http://js-test-driver.googlecode.com/files/JsTestDriver-1.2.2.jar \
              -O external/JsTestDriver.jar

#. Start the JsTestDriver server::

       $ java -jar external/JsTestDriver.jar --port 9876 \
              --config etc/jsTestDriver/jsTestDriver.conf

#. Create a tab in a browser and open this__ URL.

#. Now you can execute the tests.

Step 5 is integrated into :ref:`hk-dev-utils`, which also checks step 3
and step 4 and tells the user to perform them if they have not been.

__ http://code.google.com/p/js-test-driver/
__ http://js-test-driver.googlecode.com/files/JsTestDriver-1.2.2.jar
__ http://localhost:9876/capture

.. _margitka:

margitka
^^^^^^^^

Margitka__ is a modification of Gitk__ that displays the topics of the commit
message in a separate text area, which is useful for our :ref:`commit message
conventions <commit_message_conventions>`.

Margitka can be downloaded from GitHub, no installation is needed::

    $ git clone git://github.com/attish/margitka.git

The parametrization of Margitka is same as that of Gitk, for example::

    $ cd <Heapkeeper directory>
    $ <path to margitka>/margitka --all &

__ http://github.com/attish/margitka
__ http://lwn.net/Articles/140350/

.. _hk-dev-utils:

hk-dev-utils
^^^^^^^^^^^^

`hk-dev-utils`__ is a set of scripts to help Heapkeeper developers. Its most
important feature is to perform several tests on Heapkeeper.

hk-dev-utils can be downloaded from GitHub, no installation is needed::

    $ cd <Heapkeeper directory>
    $ git clone git://github.com/hcs42/hk-dev-utils.git

This way the ``hk-dev-utils`` directory will be in Heapkeeper's directory, but
the two repositories will be completely separate.

__ http://github.com/hcs42/hk-dev-utils

Used libraries
--------------

.. _webpy:

web.py
^^^^^^

`web.py`__ is a simple but powerful Python web framework.

It is not bundled with Heapkeeper. Unix users can download it with the
following command::

    $ sudo easy_install 'web.py==0.34'

__ http://webpy.org/

.. _jquery:

jQuery
^^^^^^

jQuery__ is a JavaScript library that makes it easier to do DOM manipulation,
event handling, AJAX etc. jQuery is included in Heapkeeper.

__ http://jquery.com/

.. _json2:

json2.js
^^^^^^^^

`json2`__ is a JSON__ parser/stringifier. json2 is included in Heapkeeper.

__ http://www.json.org/js.html
__ http://www.json.org/

.. _jsmin:

jsmin
^^^^^

jsmin__ is a JavaScript minimizer implemented in multiple languages, e.g. in
Python.

__ http://javascript.crockford.com/jsmin.html
