Implementation
--------------

* Tests:
    * heapmanip.Post.{set_tags, remove_tag}
    * heapia
* Generator: options about the fields to generate (date, tags, etc.)
* ia: enable editing a mail with a text editor from the interactive shell
* Implementing tags and flags as frozensets
* Tags dependencies, TagInfo class
* devnotes.txt: developer notes
    * architecture (relation of Post, MailDB and PostSet)
    * performance improvement possibilities (iterators)
    * using wrappers to protect e.g. MailDB.posts()
    * terminology: previous, next, cause, consequence
* Generator: * instead of the same subjects; same with tags
    Attis: Something [heap]
      Josh: * [heap] [heap-conventions]
        Csabi: Something else [heap] [heap-conventions]
          Josh: * [heap] [heap-conventions]
* Generator: different colours for the posts that are not in a section but
  their thread is
* Flag: New-thead flag to indicate that the email begins a new thread.
  Post.inreplyto -> new-thread flag (stub)
  Post.real_inreplyto
* Console interface
* Actor
* Search
* Downloading emails since given date.
* Generator: it should be able to determine the width of the generated HTML
  page (to discuss)
* Improve CSS
* Cleanup functionality
* A better system for touch: it should know what should be recalculated and
  what should not be


Discussion
----------

* Parsing email files and handling meta text
* HTML for emails
* "Things which we will talk about later" email
* Folding threads.
