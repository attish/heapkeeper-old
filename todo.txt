Implementation
--------------

* removing interface functions from heapmanip.py, modifying the documentation
* writing a User Guide, mainly about heapia
    * document options
    * tutorial
    * heapcustom
* Heapia changes:
    * create d() for downloading new mail
    * delete the heapcustom.section function
* Rename todo to todo.txt
* Tests:
    * heapmanip.Post.{set_tags, remove_tag}
    * heapia
    * Post.load
* Correct problem: order of posts in cycles in HTML is nondeterministic
  (the test was put into comment)
* putting our Heap over ftp
* should the tags be case insensitive?
* Implementing tags and flags as frozensets
* Tags dependencies, TagInfo class
* devnotes.txt: developer notes
    * architecture (relation of Post, MailDB and PostSet)
    * performance improvement possibilities (iterators)
    * using wrappers to protect e.g. MailDB.posts()
    * terminology: previous, next, cause, consequence
* Generator: different colours for the posts that are not in a section but
  their thread is
* Flag: New-thead flag to indicate that the email begins a new thread.
  Post.inreplyto -> new-thread flag (stub)
  Post.real_inreplyto
* Console interface
* Actor
* Search
* Downloading emails since given date.
* Generator: it should be able to determine the width of the generated HTML
  page (to discuss)
* Improve CSS
* Cleanup functionality
* A better system for touch: it should know what should be recalculated and
  what should not be


Discussion
----------

* Parsing email files and handling meta text
* HTML for emails
* "Things which we will talk about later" email
* Folding threads.
